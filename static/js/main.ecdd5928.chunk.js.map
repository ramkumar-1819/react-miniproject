{"version":3,"sources":["Components/Description/Description.jsx","Components/Cart/Cart.jsx","Components/Header/Header.jsx","Components/Bill/Bill.jsx","Components/Home/Home.jsx","Components/Address/Address.jsx","App.js","reportWebVitals.js","index.js"],"names":["Description","clickHandler","document","getElementsByTagName","disabled","changeHandler","e","props","updater","clicked","id","target","value","className","this","name","src","image","alt","defaultValue","description","onChange","onClick","Component","Cart","ind","new_list","state","list","setState","total","reduce","val","index","getElementsByClassName","buy","order","nextProps","console","log","length","map","type","to","Header","cartHandler","Bill","obj","address","Address","submitting","details","Name","getElementById","DoorNumber","Street","City","PinCode","ContactNumber","isrender","preventDefault","onSubmit","required","Home","innerHTML","alert","style","display","updateHandler","updated_obj","items","inc_dec_Handler","inp_val","Number","orderHandler","qty","img","price","cancel_ok","odr","push","totl","buy_now","arr","tot","val1","val2","get_address","axios","get","then","res","data","products","catch","err","exact","path","min","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ecdd5928.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Description.css'\r\n\r\nexport default class Description extends Component{\r\n    clickHandler=()=>{ //when edit buttton is clicked you can able to edit the content\r\n        document.getElementsByTagName(\"textarea\")[0].disabled=false;\r\n    }\r\n    //this function will update the content you edit to main list in home component\r\n    changeHandler=(e)=>{\r\n        this.props.updater(this.props.clicked.id-1,e.target.value)\r\n    }\r\n    render(){\r\n        return(<div className=\"main\">\r\n               <div>{this.props.clicked.name}</div>\r\n               <div className=\"description\">\r\n               <img src={this.props.clicked.image} alt=\"vegetable\"></img>\r\n               <textarea disabled defaultValue={this.props.clicked.description} onChange={this.changeHandler}></textarea>\r\n               </div>\r\n               <button  onClick={this.clickHandler}>Edit</button>\r\n        </div>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Cart.css'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\n\r\nexport default class Cart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={list:this.props.order}  //setting the list items as we got from props\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({list:nextProps.order,total:nextProps.total})  //set list of items and total cost when we update items in parent component and receive as props\r\n    }\r\n    changeHandler=(e,ind)=>{  //when qty of items is changed\r\n        var new_list=this.state.list;\r\n        new_list[ind][3]=e.target.value;\r\n        this.setState({list:new_list,total:this.state.list.reduce((total,val,index)=>(total+val[2]*document.getElementsByClassName(\"qty\")[index].value),0)})\r\n    }\r\n    clickHandler=()=>{ //when buy button is clicked set the list items and total to the callback function\r\n        this.props.buy(this.state.list,this.state.total)\r\n    }\r\n    render(){\r\n        console.log(this.state)\r\n    return(\r\n        <div className=\"final_cart\">\r\n        <h1>Cart</h1>\r\n        {this.state.list.length>0 &&\r\n        <>\r\n        {this.state.list.map((val,index)=>(\r\n            <div className=\"output\" key={index}>\r\n            <img src={val[0]} alt=\"vegetables\"></img>\r\n            <div className=\"name\">{val[1]}</div>\r\n            <div >Rs.{val[2]}</div>\r\n            <input className=\"qty\" type=\"number\" onChange={(e)=>this.changeHandler(e,index)} defaultValue={val[3]}></input>\r\n            </div>\r\n        ))\r\n        }\r\n        <div id=\"cost\">Total Rs:{this.state.total}</div>\r\n        </>\r\n        }\r\n        <button id=\"buy\" onClick={this.clickHandler}><Link to=\"/address\">BUY NOW</Link></button>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}\r\n","import './Header.css';\r\n\r\nexport default function Header(props){\r\n    var total=props.order.length //shows number of items you add to the cart\r\n    return(<div className=\"header\">\r\n    <h1>PRO MARKET</h1>\r\n    <div id=\"cart_list\" onClick={props.cartHandler}>🛒<div id=\"total\">{total}</div></div>\r\n</div>)\r\n}","import React, { Component } from 'react';\r\nimport './Bill.css'\r\n\r\nfunction Bill(props){\r\n   //contain table of itmes you order and total and address\r\n    return(<div className=\"bill\">\r\n        <h1>PROMARKET</h1>\r\n        <table id=\"table\">\r\n            <caption>BILL</caption>\r\n            <tr>\r\n                <th>S.No</th>\r\n                <th>Name</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n            </tr>\r\n            {props.list.map((val,index)=>(\r\n                <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>{val[1]}</td>\r\n                    <td>{val[3]}</td>\r\n                    <td>{val[2]}</td>\r\n                </tr>\r\n            ))}\r\n        <div id=\"tot\">Total - Rs.{props.total}</div>\r\n        </table>\r\n        \r\n        <div className=\"adds\">\r\n            <b>Delivered to:</b>\r\n            <address>\r\n                Name: {props.address[\"Name\"]}<br></br>\r\n                DoorNumber: {props.address[\"DoorNumber\"]}<br></br>\r\n                Street: {props.address[\"Street\"]}<br></br>\r\n                City: {props.address[\"City\"]}<br></br>\r\n                PinCode: {props.address[\"PinCode\"]}<br></br>\r\n                ContactNumber: {props.address[\"ContactNumber\"]}<br></br>\r\n            </address>\r\n        </div> \r\n    </div>)\r\n}\r\nexport default Bill\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Description from '../Description/Description';\r\nimport Cart from '../Cart/Cart';\r\nimport Header from '../Header/Header';\r\nimport './Home.css';\r\nimport Bill from '../Bill/Bill';\r\nimport Address from '../Address/Address';\r\n\r\nvar obj;                                             //this variable used to hold values that you order\r\nexport default class Home extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={items:\"\",order:[],val1:\"\",val2:\"\",address:\"\"} //item hold all datas and order hold what are all the things that you order and val1 and val2 are the items and total of items that used to generate a bill and address hold the address you entered in address form component.\r\n    }\r\n\r\n    componentDidMount(){                                //fetching from api using axios and setting in the state\r\n        axios.get(\"https://api.mocki.io/v1/7bd0682b\")\r\n        .then(res=>this.setState({items:res.data.products}))\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    cartHandler=()=>{                                    //when cart symbol is clicked\r\n        if(document.getElementById(\"total\").innerHTML===\"0\"){\r\n            alert(\"No items in the Cart\")\r\n        }\r\n        else{\r\n        document.getElementsByClassName(\"cart\")[0].style.display=\"block\";\r\n        document.getElementById(\"popup_section\").style.display=\"block\";\r\n        }\r\n    }\r\n\r\n    clickHandler=(val)=>{                                //when you click on the image you are popup to the description page so u need the details to shown there for this we set these details in state\r\n          this.setState({clicked:val})\r\n    }\r\n     \r\n    updateHandler=(id,val)=>{                            //this function is passed to Description component as callback function and this perform when you edit the description and save the value.\r\n          var updated_obj=this.state.items\r\n          updated_obj[id].description=val \r\n          this.setState({items:updated_obj})\r\n    }\r\n\r\n    inc_dec_Handler=(val,ind)=>{                          //this function is used to increment or decrement the order quantity\r\n           var inp_val= Number(document.getElementsByClassName(\"input\")[ind].value)\r\n            if(val===\"+\"){\r\n                document.getElementsByClassName(\"input\")[ind].value=inp_val+1\r\n            }\r\n            else if(val===\"-\" && inp_val>1){\r\n                document.getElementsByClassName(\"input\")[ind].value=inp_val-1\r\n            }\r\n    }\r\n\r\n    orderHandler=(val,qty)=>{                             //when you click add to cart button, this function is called and perform the necessary action \r\n        document.getElementsByClassName(\"popup\")[0].style.display=\"block\";//showing the popup section\r\n        document.getElementById(\"popup_section\").style.display=\"block\"; \r\n        var img=val.image;\r\n        var name=val.name;\r\n        var price=val.price;\r\n        var quantity=qty;\r\n        obj=[img,name,price,quantity]\r\n        //setting the order values in obj object\r\n    }\r\n     \r\n    cancel_ok=(val)=>{                                       //if ok is clicked then add order to state else it doesn't do nothing\r\n        if(val===\"cancel\"){\r\n            document.getElementsByClassName(\"popup\")[0].style.display=\"none\";\r\n            document.getElementById(\"popup_section\").style.display=\"none\";\r\n        }\r\n        else if(val===\"ok\"){\r\n            document.getElementsByClassName(\"popup\")[0].style.display=\"none\";\r\n            document.getElementById(\"popup_section\").style.display=\"none\";\r\n            var odr=this.state.order\r\n            odr.push(obj)\r\n            var total=odr.reduce((totl,val)=>(totl+val[2]*val[3]),0)\r\n            this.buy_now(odr,total)\r\n            this.setState({order:odr,total:total})\r\n        }\r\n    }\r\n\r\n    buy_now=(arr,tot)=>{                                    //passed as a callback function to cart component to get the list items and total of items.\r\n       this.setState({val1:arr,val2:tot})\r\n    }\r\n    get_address=(val)=>{                                     //passed as a callback function to address component\r\n        this.setState({address:val})\r\n    }\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <>\r\n                <Switch>\r\n                <Route exact path=\"/\">\r\n                <Header order={this.state.order} cartHandler={this.cartHandler}/>\r\n                        {this.state.items &&\r\n                            <div className=\"container\">\r\n                                <div id=\"list\">\r\n                            {this.state.items.map((val,index)=>(\r\n                                <div key={val.id} className=\"items\">\r\n                                    <div><Link to=\"/description\"><img src={val.image} alt=\"vegetables pics\" onClick={()=>this.clickHandler(val)}></img></Link></div>\r\n                                    <div>{val.name}</div>\r\n                                    <div>Rs:{val.price}</div>\r\n                                    <div className=\"inputs\"><button onClick={()=>this.inc_dec_Handler(\"+\",index)}>+</button><input className=\"input\" type=\"number\" min=\"1\" defaultValue=\"1\"></input><button onClick={()=>this.inc_dec_Handler(\"-\",index)}>-</button></div>\r\n                                    <button onClick={()=>this.orderHandler(val,document.getElementsByClassName(\"input\")[index].value)}>Add to Cart</button>\r\n                                </div>\r\n                            ))\r\n                            }\r\n                            </div>\r\n                            <div id=\"popup_section\"></div>\r\n                            <div className=\"popup\">\r\n                                <div>Waiting for your Order Confirmation?</div>\r\n                                <div>\r\n                                <button onClick={()=>this.cancel_ok(\"cancel\")}>Cancel</button>\r\n                                <button onClick={()=>this.cancel_ok(\"ok\")}>Ok</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cart\">\r\n                            <Cart order={this.state.order} buy={this.buy_now} total={this.state.total} />\r\n                            </div>\r\n                            </div>\r\n                        } \r\n                        </Route> \r\n                        <Route path=\"/description\">\r\n                        <Description clicked={this.state.clicked} updater={this.updateHandler}/>\r\n                        </Route>\r\n                        <Route path=\"/address\">\r\n                            <Address address={this.get_address}/>\r\n                        </Route>\r\n                        <Route path=\"/payment\">\r\n                        <Bill list={this.state.val1} total={this.state.val2} address={this.state.address}/>\r\n                       </Route>\r\n        \r\n                </Switch>\r\n                </> \r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Address.css'\r\n\r\nexport  default class Address extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={isrender:false} //if isrender is true then popup appear and that hold link to bill component\r\n    }\r\n    submitting=(e)=>{ //when form submitted then the details is sent to home component by using the callback function we received as props\r\n        var details={Name:document.getElementById(\"name\").value,\r\n                     DoorNumber:document.getElementById(\"dno\").value,\r\n                     Street:document.getElementById(\"street\").value,\r\n                     City:document.getElementById(\"city\").value,\r\n                     PinCode:document.getElementById(\"pin\").value,\r\n                     ContactNumber:document.getElementById(\"contact\").value\r\n                    }\r\n        this.props.address(details)\r\n        this.setState({isrender:true})\r\n        e.preventDefault()\r\n    }\r\n    clickHandler=()=>{\r\n        this.setState({isrender:false})\r\n    }\r\n    render(){\r\n    return(\r\n        <>\r\n        <div id=\"head\">\r\n        <h1>PROMARKET</h1>\r\n        <div>Please fill your Address to deliver the products</div>\r\n        </div>\r\n        <form onSubmit={this.submitting} id=\"form\">\r\n            <label>Name</label>\r\n            <input type=\"text\" required id=\"name\"></input>\r\n            <label>DoorNumber</label>\r\n            <input type=\"text\" required id=\"dno\"></input>\r\n            <label>Street</label> \r\n            <input type=\"text\" required id=\"street\"></input>\r\n            <label>City</label>\r\n            <input type=\"text\" required id=\"city\"></input>\r\n            <label>Pincode</label>\r\n            <input type=\"number\" required id=\"pin\"></input>\r\n            <label>ContactNumber</label>\r\n            <input type=\"number\" required id=\"contact\"></input>\r\n            <button type=\"submit\">PROCEED</button>\r\n        </form>\r\n        {this.state.isrender===true &&\r\n        <>\r\n        <div id=\"hide\"></div>\r\n        <div id=\"pop\">\r\n            <div>Can we Proceed to Bill?</div>\r\n            <div className=\"yes_no\">\r\n            <button onClick={this.clickHandler}>No</button>\r\n            <button><Link to=\"/payment\">Yes</Link></button>\r\n            </div>\r\n        </div>     \r\n        </>\r\n        }\r\n        </>\r\n    )\r\n    }\r\n}","import './App.css';\nimport Home from './Components/Home/Home'\nfunction App() {\n  return (<Home/>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}